// Generated by CoffeeScript 2.3.2
(function() {
  var Game, Terminal, game, i, input, readline;

  readline = require('readline').createInterface({
    input: process.stdin,
    output: process.stdout
  });

  i = function(text) {
    return console.log(text);
  };

  Game = class Game {
    constructor() {
      this.civ = [];
      this.day = 1;
      this.civ.push({
        name: "Хуеград",
        population: 1
      });
      i(this.civ);
    }

    turn() {
      this.born();
      return i(this.civ);
    }

    dice(n, max) {
      if (n === this.rnd(1, max)) {
        return true;
      } else {
        return false;
      }
    }

    rnd(min, max) {
      var res;
      res = Math.random() * (max - min) + min;
      return res = Math.round(res);
    }

    born() {
      var max, n, target;
      n = this.count_population() * this.rnd(1, 5) / 100;
      i(n);
      n = Math.ceil(n);
      i(n);
      i(`Сегодня родилось ${n} человек! \n`);
      max = this.civ.length;
      target = Math.random() * max;
      target = Math.floor(target);
      this.civ[target].population += n;
      return true;
    }

    count_population() {
      var city, j, len, ref, res;
      res = 0;
      ref = this.civ;
      for (j = 0, len = ref.length; j < len; j++) {
        city = ref[j];
        res += city.population;
      }
      return res;
    }

  };

  Terminal = class Terminal {
    constructor(game) {
      i("╔═════════════════════════╗");
      i("║                         ║");
      i("║ Welcome to Civilization ║");
      i("║                         ║");
      i("╚═════════════════════════╝");
      i("");
      this.game = game;
      this.terminal();
    }

    terminal() {
      return readline.question('\n> ', function(answer) {
        var parsed;
        // Parser
        parsed = answer.split(" ");
        
        // Parse one-word commands

        if (parsed.length === 1) {
          switch (answer) {
            case "":
              input.game.turn();
              input.terminal();
              false;
              break;
            case "q":
              true;
              break;
            default:
              i("Undefined one-word command.");
              input.terminal();
              false;
          }
        }
        return false;
      });
    }

  };

  
  //############
  game = new Game;

  input = new Terminal(game);

}).call(this);
